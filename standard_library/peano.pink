domain { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }
reserve { Naturals, successor, + }
use { sets }

0 in Naturals => true;
else in Naturals => false;
successor(n) in Naturals => n in Naturals;

1 <=> successor(0);
2 <=> successor(1);
3 <=> successor(2);
4 <=> successor(3);
5 <=> successor(4);
6 <=> successor(5);
7 <=> successor(6);
8 <=> successor(7);
9 <=> successor(8);

# Addition
0 + 0 => 0;
n + successor(m) => successor (n + m);
n + m <=> m + n;